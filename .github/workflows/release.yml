name: Release

permissions:
  contents: write

on:
  push:
    tags:
      - v[0-9]+.*

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: taiki-e/create-gh-release-action@v1
        with:
          # (optional) Path to changelog.
          changelog: CHANGELOG.md
          # (required) GitHub token for creating GitHub Releases.
          token: ${{ secrets.GITHUB_TOKEN }}

  build-binaries:
    name: "Build binaries"
    runs-on: ${{ matrix.info.os }}
    container: ${{ matrix.info.container }}
    strategy:
      fail-fast: false
      matrix:
        info:
          # ======= Supported targets =======
          # Linux (x64, x86, aarch64)
          - {
              os: "ubuntu-latest",
              target: "x86_64-unknown-linux-gnu",
              cross: false,
            }
          - {
              os: "ubuntu-latest",
              target: "x86_64-unknown-linux-gnu",
              cross: false,
              container: quay.io/pypa/manylinux2014_x86_64,
              suffix: "2-17",
            }
          - {
              os: "ubuntu-latest",
              target: "i686-unknown-linux-gnu",
              cross: true,
            }
          - {
              os: "ubuntu-latest",
              target: "x86_64-unknown-linux-musl",
              cross: false,
            }
          - {
              os: "ubuntu-latest",
              target: "i686-unknown-linux-musl",
              cross: true,
            }
          - {
              os: "ubuntu-latest",
              target: "aarch64-unknown-linux-gnu",
              cross: true,
            }
          - {
              os: "ubuntu-latest",
              target: "aarch64-unknown-linux-musl",
              cross: true,
            }
          # macOS (x64)
          - { os: "macos-latest", target: "x86_64-apple-darwin", cross: false }
          # Windows (x64, x86)
          - {
              os: "windows-latest",
              target: "x86_64-pc-windows-msvc",
              cross: false,
            }
          - {
              os: "windows-latest",
              target: "i686-pc-windows-msvc",
              cross: false,
            }
          - {
              os: "windows-latest",
              target: "x86_64-pc-windows-gnu",
              cross: false,
            }
    steps:
      - name: Install pkg-config (Ubuntu)
        if: matrix.info.os == 'ubuntu-latest'
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config
          sudo apt-get install -y libssl-dev
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: ${{ matrix.info.target }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.info.target }}
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.info.target }}
          path: |
            target/${{ matrix.info.target }}/release/seam
            target/${{ matrix.info.target }}/release/seam.exe
